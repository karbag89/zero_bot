"""Database initial migration.

Revision ID: 0e88b4f61f77
Revises: 
Create Date: 2023-01-13 04:30:06.973593

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0e88b4f61f77'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('choice', sa.String(length=255), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.create_index('idx_classes_id', ['id'], unique=True)

    op.create_table('picture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('picture', sa.Text(), nullable=True),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('picture', schema=None) as batch_op:
        batch_op.create_index('idx_picture_id', ['id'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('telegram_user', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_user'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_telegram_user', ['telegram_user'], unique=True)
        batch_op.create_index('idx_username', ['username'], unique=True)

    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('picture_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['picture_id'], ['picture.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index('idx_task_id', ['id'], unique=True)
        batch_op.create_index(batch_op.f('ix_task_picture_id'), ['picture_id'], unique=True)

    op.create_table('statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('choice_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['choice_id'], ['classes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('statistics')
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_picture_id'))
        batch_op.drop_index('idx_task_id')

    op.drop_table('task')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_username')
        batch_op.drop_index('idx_telegram_user')

    op.drop_table('users')
    with op.batch_alter_table('picture', schema=None) as batch_op:
        batch_op.drop_index('idx_picture_id')

    op.drop_table('picture')
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.drop_index('idx_classes_id')

    op.drop_table('classes')
    # ### end Alembic commands ###
